# Generated by Django 5.1.1 on 2024-10-17 10:10

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=20)),
                ('first_name', models.CharField(max_length=25)),
                ('last_name', models.CharField(max_length=25)),
                ('other_name', models.CharField(blank=True, max_length=25, null=True)),
                ('phone_number_1', models.CharField(max_length=15)),
                ('phone_number_2', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('employment_type', models.CharField(choices=[('FULLTIME', 'Fulltime'), ('GRADUATE_ASSISTANT', 'Graduate Assistant'), ('PART_TIME', 'Part-time'), ('INTERN', 'Intern'), ('CORPER', 'Corper')], max_length=20)),
                ('home_address', models.CharField(max_length=55)),
                ('local_government_area', models.CharField(max_length=100)),
                ('state_of_origin', models.CharField(max_length=15)),
                ('nationality', models.CharField(blank=True, max_length=15, null=True)),
                ('nin', models.CharField(max_length=15, unique=True)),
                ('staff_type', models.CharField(choices=[('TEACHING', 'Teaching'), ('NON_TEACHING', 'Non-teaching')], max_length=20)),
                ('staff_id', models.CharField(blank=True, max_length=25, unique=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], max_length=20)),
                ('position', models.CharField(max_length=20)),
                ('religion', models.CharField(blank=True, max_length=20, null=True)),
                ('upload', models.ImageField(blank=True, null=True, upload_to='Staff_profile/')),
                ('img_url', models.URLField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AccountInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=20)),
                ('account_name', models.CharField(max_length=100)),
                ('sort_code', models.CharField(blank=True, max_length=10, null=True)),
                ('staff', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bank_account', to='staff.staff')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('staff_id', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('admin_id', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='teacheradmin_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='teacheradmin_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pay_period', models.DateField()),
                ('basic_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('allowances', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('deductions', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('net_pay', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSED', 'Processed'), ('PAID', 'Paid')], default='PENDING', max_length=20)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('transaction_reference', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='staff.accountinfo')),
                ('staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payrolls', to='staff.staff')),
            ],
            options={
                'ordering': ['-pay_period', 'staff__last_name'],
                'unique_together': {('staff', 'pay_period')},
            },
        ),
    ]
